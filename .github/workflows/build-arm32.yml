name: Build ARM32 Docker Image

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # 允许手动触发

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的 git 历史用于版本号

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install Cross Compilation Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabi g++-arm-linux-gnueabi libc6-dev-armel-cross

      - name: Build ARM32 Binary
        run: |
          export CC=arm-linux-gnueabi-gcc
          export CGO_ENABLED=1
          export GOOS=linux
          export GOARCH=arm
          export GOARM=7
          export CGO_CFLAGS="-march=armv7-a"
          export CGO_LDFLAGS="-static"
          go build -buildvcs=false \
            -tags "sqlite_omit_load_extension" \
            -ldflags="-linkmode external -extldflags '-static'" \
            -o komari-linux-armv7
          
          # 移除调试信息
          arm-linux-gnueabi-strip komari-linux-armv7

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=,suffix=,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.arm32v7
          platforms: linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
